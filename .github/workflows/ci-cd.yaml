name: Continuous Integration and Deployment (CI/CD)

on:
  push:
    branches:
      - master

env:
  DOTNET_VERSION: '5.0.x'   # set this to the dot net version to use
  AZURE_WEBAPP_NAME: eepocapi   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'   # set this to the path to your web app project, defaults to the repository root
  AZURE_RESOURCE_GROUP_NAME: 'ExtraaEdge-Dev-Free-RG'   #set this to the name of the azure resource group
  WEBSITE: 'website'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code 
        uses: actions/checkout@master

      # Setup .NET Core SDK
      - name: Setup .NET Core 5
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish "./Sample-CI-CD.csproj" -c Release -o ${{ env.WEBSITE }} 
          
      # Upload a Build Artifact
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: ${{ env.WEBSITE }}
          path: ./${{ env.WEBSITE }}/**
          if-no-files-found: error

  deploy_staging:
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: PRE-PROD
      url: ${{ steps.deploywebapp.outputs.webapp-url }}

    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        name: ${{ env.WEBSITE }}
        path: ${{ env.WEBSITE }}

      # Deploy to Azure Web apps
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_PRE_PROD  }} # Define secret variable in repository settings as per action documentation
        slot-name: staging
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/${{ env.WEBSITE }}'  

  deploy_prod:
    needs: deploy_staging
    runs-on: ubuntu-latest

    environment:
      name: PROD
      url: ${{ steps.slot_swap.outputs.url }}

    steps:
    - name: Swap staging slot into production
      id: slot_swap
      publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
      run: |
        az webapp deployment slot swap -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} -n ${{ env.AZURE_WEBAPP_NAME }} -s staging
        url=$(az webapp show -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} -n ${{ env.AZURE_WEBAPP_NAME }} --query "defaultHostName" -o tsv)
        echo "::set-output name=url::http://$url"



     
    
  