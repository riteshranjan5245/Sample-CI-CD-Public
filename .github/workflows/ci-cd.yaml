name: Continuous Integration and Deployment (CI/CD)

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  DOTNET_VERSION: '5.0.x'   # set this to the dot net version to use
  AZURE_WEBAPP_NAME: 'eetestvnet'   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'   # set this to the path to your web app project, defaults to the repository root
  AZURE_RESOURCE_GROUP_NAME: 'southindiagroup1_linux'   #set this to the name of the azure resource group
  WEBSITE: 'website'
  SLOT: 'eetestvnet'
  CSPROJ_PATH: './Api/ExtraaEdge.Api/ExtraaEdge.Api.csproj'


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code 
        uses: actions/checkout@master

      # Setup .NET Core SDK
      - name: Setup .NET Core 5
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore ${{ env.CSPROJ_PATH }}
          dotnet build ${{ env.CSPROJ_PATH }} --configuration Release
          dotnet publish ${{ env.CSPROJ_PATH }} -c Release -o ${{ env.WEBSITE }} 
          
      # Upload a Build Artifact
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: ${{ env.WEBSITE }}
          path: ./${{ env.WEBSITE }}/**
          if-no-files-found: error

  deploy_swap:
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: TEST
      url: ${{ steps.deploywebapp.outputs.webapp-url }}

    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        name: ${{ env.WEBSITE }}
        path: ${{ env.WEBSITE }}

    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} 
     
      # Deploy to Azure Web apps
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
        slot-name: ${{ env.SLOT }}
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/${{ env.WEBSITE }}'  

    - name: az cli logout
      run: az logout

  # deploy_release:
  #   needs: deploy_swap
  #   runs-on: ubuntu-latest

  #   environment:
  #     name: RELEASE
  #     url: ${{ steps.slot_swap.outputs.url }}

  #   steps:
  #   - name: Login via Azure CLI
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}

  #   - name: Swap staging slot into production
  #     id: slot_swap
  #     run: |
  #       az webapp deployment slot swap -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} -n ${{ env.AZURE_WEBAPP_NAME }} -s ${{ env.SLOT }}
  #   - name: az cli logout
  #     run: az logout

  cleanup_job:
    needs: deploy_swap
    runs-on: ubuntu-latest
    steps:
    - name: List workspace contents
      run: ls

    - name: Cleanup artifacts
      run: |
        artifact_directory=$(find . -type d -name "${{ env.WEBSITE }}")
        rm -rf $artifact_directory

  # cleanup_job:
  #   needs: deploy_test
  #   if: always()
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: call webhook to delete artifacts
  #     env:
  #       FOR_WEBHOOKS_SECRET: ${{ secrets.FOR_WEBHOOKS_SECRET }}
  #     run: |
  #       echo "::add-mask::$FOR_WEBHOOKS_SECRET"
  #       curl --verbose --fail --show-error --location --request POST "https://api.github.com/repos/$GITHUB_REPOSITORY/dispatches" --header "Authorization: token $FOR_WEBHOOKS_SECRET" --header 'Content-Type: application/json' --header 'Accept: application/vnd.github.everest-preview+json' --header 'Connection: close' --data-raw "{ \"event_type\": \"delete_all_artifacts\", \"client_payload\": {\"parent_runid\": \"$GITHUB_RUN_ID\", \"parent_repo\": \"$GITHUB_REPOSITORY\"} }"

  build:
    runs-on: windows-latest
    steps:
      - name: Check out code 
        uses: actions/checkout@master

      # Setup .NET Core SDK
      - name: Setup .NET Core 5
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish "./Sample-CI-CD.csproj" -c Release -o ${{ env.WEBSITE }} 
          
      # Upload a Build Artifact
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: ${{ env.WEBSITE }}
          path: ./${{ env.WEBSITE }}/**
          if-no-files-found: error

  deploy_staging:
    needs: build
    runs-on: windows-latest

    environment:
      name: PRE-PROD
      url: ${{ steps.deploywebapp.outputs.webapp-url }}

    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        name: ${{ env.WEBSITE }}
        path: ${{ env.WEBSITE }}

      # Deploy to Azure Web apps
    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    #substitute production appsettings entries to appsettings json file
    - name: App Settings Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/${{ env.WEBSITE }}/appsettings.json'
      env:
        RandomValue: ${{ secrets.RANDOM }}
        UI: ${{ secrets.HEADER }}

    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
        slot-name: qa
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/${{ env.WEBSITE }}'  

    - name: az cli logout
      run: az logout

  deploy_prod:
    needs: deploy_staging
    runs-on: windows-latest

    environment:
      name: PROD
      url: ${{ steps.slot_swap.outputs.url }}

    steps:
    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Update config
      uses: Azure/appservice-settings@v1
      with:
       app-name: ${{ env.AZURE_WEBAPP_NAME }}
       mask-inputs: false
       app-settings-json: '${{ secrets.APP_SETTINGS }}'

    - name: Swap staging slot into production
      id: slot_swap
      run: |
        az webapp deployment slot swap -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} -n ${{ env.AZURE_WEBAPP_NAME }} -s qa

    - name: az cli logout
      run: az logout



     
    
  